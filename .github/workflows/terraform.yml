name: Terraform EFS Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  TF_STATE_BUCKET: vj-test-benvolate
  TF_STATE_KEY: "EC2/terraform.tfstate"   # Network EFS EC2
  AWS_REGION: us-east-2

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/code/EC2   # Network EFS EC2

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Verify AWS Access
        run: aws sts get-caller-identity

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ env.TF_STATE_KEY }}" \
            -backend-config="region=us-east-2" \
            -backend-config="encrypt=true"

      - name: Terraform Format Check
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan


      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan



      - name: Save EC2 instance ID to environment
        shell: bash
        run: |
          echo "INSTANCE_ID=$(terraform output -raw module_instance_id_for_ssm)" >> $GITHUB_ENV

      - name: Confirm INSTANCE_ID
        shell: bash
        run: |
          echo "EC2 Instance ID from ENV: $INSTANCE_ID"

      - name: Check Node.js, PM2, EFS status
        shell: bash
        run: |
          aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --parameters commands='["node -v", "pm2 list", "df -h | grep efs"]' \
            --comment "Verify Node.js and EFS setup" \
            --region ${{ env.AWS_REGION }} \
            --output text

      - name: Verify EFS directory contents
        run: |
          aws ssm send-command \
            --instance-ids "${{ env.INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=["ls -l /mnt/efs/code/nodejs-app", "cat /mnt/efs/code/nodejs-app/.env"]' \
            --comment "Check app deployment and env file" \
            --region ${{ env.AWS_REGION }} \
            --output text