name: Terraform EFS Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  TF_STATE_BUCKET: vj-test-benv
  TF_STATE_KEY: "EC2/terraform.tfstate"   # Network EFS EC2
  AWS_REGION: us-east-2

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/code/EC2   # Network EFS EC2

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Verify AWS Access
        run: aws sts get-caller-identity

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ env.TF_STATE_KEY }}" \
            -backend-config="region=us-east-2" \
            -backend-config="encrypt=true"

      - name: Terraform Format Check
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan


      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Trigger SSM to update EFS code on EC2
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:Name,Values=ecs-instance-ubuntu" \
            --comment "Redeploy Node app" \
            --parameters 'commands=[
              "echo Step 1: Clean old repo if it exists",
              "if [ -d /mnt/efs/code/.git ]; then rm -rf /mnt/efs/code/* /mnt/efs/code/.git; fi",

              "echo Step 2: Clone fresh code from GitHub",
              "git clone --single-branch --branch nodejs https://github.com/VidyaranyaRJ/application.git /mnt/efs/code",

              "echo Step 3: Fix EFS permissions",
              "chown -R ubuntu:ubuntu /mnt/efs/code",

              "echo Step 4: Install node modules",
              "cd /mnt/efs/code/nodejs",
              "sudo -u ubuntu npm install",

              "echo Step 5: Install pm2 globally (if missing)",
              "if ! command -v pm2 >/dev/null; then npm install -g pm2; fi",

              "echo Step 6: Restart or start app",
              "pm2 restart nodejs-app || pm2 start index.js --name nodejs-app",

              "echo Step 7: Save PM2 startup config",
              "pm2 save"
            ]' \
            --region us-east-2
