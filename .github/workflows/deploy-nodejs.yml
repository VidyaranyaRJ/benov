name: Node.js App Deployment

on:
  push:
    branches:
      - dev
      - uat
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev, uat, prod)"
        required: true
        default: dev
        type: choice
        options:
          - dev
          - uat
          - prod

env:
  AWS_REGION: us-east-2
  S3_BUCKET: vj-test-benvolate
  MODULE: Nodejs

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment name
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "BRANCH_NAME=main" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=${GITHUB_REF_NAME}" >> $GITHUB_ENV
            echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi
          
          echo "Deploying to environment: $ENVIRONMENT"
          echo "From branch: $BRANCH_NAME"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create deployment package
        run: |
          echo "üì¶ Creating deployment package for $ENVIRONMENT environment..."
          
          # Create deployment metadata
          mkdir -p deploy-temp
          echo "ENVIRONMENT=$ENVIRONMENT" > deploy-temp/.deploy-meta
          echo "BRANCH=$BRANCH_NAME" >> deploy-temp/.deploy-meta
          echo "COMMIT_SHA=${{ github.sha }}" >> deploy-temp/.deploy-meta
          echo "DEPLOY_TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> deploy-temp/.deploy-meta
          
          # Copy Nodejs folder contents (excluding .git, node_modules, etc.)
          cp -r Nodejs/* deploy-temp/
          
          # Create zip package
          cd deploy-temp
          zip -r ../nodejs-app.zip . -x "*.git*" "node_modules/*" "*.DS_Store*"
          cd ..
          
          echo "‚úÖ Package created: nodejs-app.zip"
          ls -lah nodejs-app.zip

      - name: Upload to S3
        run: |
          S3_PATH="s3://${S3_BUCKET}/nodejs/${ENVIRONMENT}"
          
          echo "‚òÅÔ∏è Uploading nodejs-app.zip to ${S3_PATH}/"
          aws s3 cp nodejs-app.zip ${S3_PATH}/nodejs-app.zip --region $AWS_REGION
          
          echo "‚òÅÔ∏è Uploading deployment script to ${S3_PATH}/"
          aws s3 cp deploy.sh ${S3_PATH}/deploy.sh --region $AWS_REGION

          echo "‚òÅÔ∏è Uploading PM2 reset script to S3..."
          aws s3 cp Nodejs/scripts/pm2-reset-restart.sh s3://${S3_BUCKET}/scripts/pm2-reset-restart.sh --region $AWS_REGION
          
          echo "‚úÖ Files uploaded successfully"

          

      - name: Trigger EC2 deployment
        run: |
          echo "üöÄ Triggering deployment to $ENVIRONMENT environment..."
          chmod +x ./deploy.sh
          ./deploy.sh $ENVIRONMENT